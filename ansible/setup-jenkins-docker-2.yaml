---
- hosts: all
  gather_facts: false
  tasks:
  # Pick up after the manual completion of the Jenkins web setup wizard
  - name: Include secret info
    include_vars:
      file: jenkins-private-info.yaml
      name: private
  - debug: var=private.test_secret_var
  - name: Download Jenkins Java CLI from container (with retries)
    delegate_to: localhost
    get_url:
      url: http://localhost:8080/jnlpJars/jenkins-cli.jar
      dest: /tmp/jenkins-cli.jar
      mode: 0700
    register: download_cli_result
    until: download_cli_result.failed == false
    retries: 6
    delay: 10
  # TODO: make a loop over the create temp / process template / create cred / delete section
  # so multiple creds/users can be added
  # TODO: Check that each user doesn't already exist so this playbook will be idempotent
  - name: Create temp file for holding Jenkins credential creation Groovy script
    delegate_to: localhost
    tempfile:
      state: file
      prefix: jenkins-setup-
    register: jenkins_setup_creds_tempfile
  - debug: var=jenkins_setup_creds_tempfile
  - name: "Create custom Groovy script to add '{{ private.jenkins_cred_to_add_username }}' to Jenkins credentials"
    delegate_to: localhost
    template:
      # TODO: ensure jenkins_cred_to_add.username and jenkins_cred_to_add.password are set
      src: jenkins_add_cred.groovy.js2
      dest: "{{ jenkins_setup_creds_tempfile.path }}"
  - name: Upload previously downloaded GUI-created job definition
    local_action: shell java -jar /tmp/jenkins-cli.jar -s http://localhost:8080 -auth "sbonds_adm:{{private.jenkins_admin_password|quote}}" groovy "{{ jenkins_setup_creds_tempfile.path }}"
    register: jenkins_create_creds
  - debug: var=jenkins_create_creds
  # The 'shred' overwrite is NOT a guarantee that the sensitive data in the temp file cannot be recovered with effort, but it helps make it harder.
  ##- name: Overwrite and remove credentials temp file
  ##  local_action: shell shred --zero --remove {{ jenkins_setup_creds_tempfile.path|quote }}
  ##- name: Check if temp file removed
  ##  delegate_to: localhost
  ##  stat: 
  ##    path: "{{ jenkins_setup_creds_tempfile.path }}"
  ##  register: jenkins_setup_creds_tempfile_stat
  - name: Fail unless temp file removed
    fail: msg="A tempfile containing sensitive info at {{ jenkins_setup_creds_tempfile.path }} was not shredded and removed. Try running 'shred' on it manually."
    when: jenkins_setup_creds_tempfile_stat.stat.exists
  # Just the job isn't enough-- it relies on credentials for GitHub
  - name: Upload previously downloaded GUI-created job definition
    local_action: shell java -jar /tmp/jenkins-cli.jar -s http://localhost:8080 -auth "sbonds_adm:{{private.jenkins_admin_password|quote}}" create-job "Hello World" < "Hello World Go.xml"
    register: jenkins_cli_job_upload
  - debug: var=jenkins_cli_job_upload
